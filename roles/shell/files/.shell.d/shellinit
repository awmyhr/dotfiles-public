#!/bin/sh
# [SublimeLinter shellcheck-exclude:"SC2039" ]
#===============================================================================
#
#         FILE: .shell.d/shellinit
#
#        USAGE: (should be sourced by interactive shell logins)
#
#  DESCRIPTION: Set up working shell environment.
#
# REQUIREMENTS: Bourne-compatible shell
#               uname (via 'coreutils')
#       AUTHOR: awmyhr, awmyhr@gmail.com
#      VERSION: 1.14.3
#     REVISION: 2017-07-20
#      CREATED: 2016-09-28
#===============================================================================
#----------------------------------------------------------------------
#-- Notes/known bugs/other issues
#----------------------------------------------------------------------

#----------------------------------------------------------------------
umask 022

#----------------------------------------------------------------------
#-- Load settings, functions, symbols, and others
#----------------------------------------------------------------------
[ -r "${SHELLD}/etc/settings" ]   && . "${SHELLD}/etc/settings"
[ -r "${SHELLD}/lib/functions" ]  && . "${SHELLD}/lib/functions"
[ -r "${SHELLD}/lib/symbols" ]    && . "${SHELLD}/lib/symbols"
[ -r "${SHELLD}/lib/exitcodes" ]  && . "${SHELLD}/lib/exitcodes"
[ -r "${SHELLD}/lib/colors" ]     && . "${SHELLD}/lib/colors"
[ -r "${SHELLD}/lib/aliases" ]    && . "${SHELLD}/lib/aliases"

#----------------------------------------------------------------------
#-- Load packages
#----------------------------------------------------------------------
#   Default VCS pacakge
[ "${DEFAULT_VCS}" ] && command -v "${DEFAULT_VCS}" >/dev/null 2>&1 && {
    [ -r "${SHELLD}/packages/${DEFAULT_VCS}" ] && \
       . "${SHELLD}/packages/${DEFAULT_VCS}"
}

command -v docker >/dev/null 2>&1 && {
    [ -r "${SHELLD}/packages/docker" ] && \
       . "${SHELLD}/packages/docker"
}

command -v pcs >/dev/null 2>&1 && {
    [ -r "${SHELLD}/packages/pcs" ] && \
       . "${SHELLD}/packages/pcs"
}

#----------------------------------------------------------------------
#-- Set up PATH/MANPATH/PERL5LIB/PYTHONPATH
#----------------------------------------------------------------------
if [ -r "${SHELLD}/etc/paths" ]; then
    while read line
    do
        if [ -d "${line}" ]; then
            pathmunge "${line}" before
        fi
    done <"${SHELLD}/etc/paths"
fi; unset line

if [ -e "${SHELLD}/etc/manpaths" ]; then
    while read line
    do
        if [ -d "${line}" ]; then
            manpathmunge "${line}" before
        fi
    done <"${SHELLD}/etc/manpaths"
fi; unset line

if [ -d "${HOME}/lib/perl5" ]; then
    PERL5LIB="${HOME}/lib/perl5:${PERL5LIB}"
fi

if [ -d "${HOME}/lib/python" ]; then
    PYTHONPATH="${HOME}/lib/python:${PYTHONPATH}"
fi

[ -d "${HOME}/bin" ] && PATH="${HOME}/bin:${PATH}"
[ -d "${HOME}/man" ] && MANPATH="${MANPATH}:${HOME}/man"
[ -d "${HOME}/projects/go" ] && {
    GOPATH="${HOME}/projects/go"
    PATH="${PATH}:${GOPATH}/bin"
}

export PATH MANPATH GOPATH PERL5LIB PYTHONPATH

#----------------------------------------------------------------------
#-- Set up sysinfo variables and load in platform specific things
#----------------------------------------------------------------------
command -v uname >/dev/null 2>&1 && {
    read -r -- UNAMES SYSNAME UNAMER PLATFORM <<EOF
    $(uname -nprs)
EOF
    #-- The '-o' option is non-standard, so we'll try it seperately
    UNAMEO=$(uname -o 2>/dev/null)
    [ -z "${HOSTNAME}" ] && HOSTNAME="${SYSNAME}" && export HOSTNAME
    [ -z "${OSTYPE}" ]   && OSTYPE="${UNAMES}"    && export OSTYPE
    export UNAMES UNAMER PLATFORM
    [ -r "${SHELLD}/platform/${UNAMES}" ] && . "${SHELLD}/platform/${UNAMES}"
}
# UNAMER formats for Linux kernels:
# Base Kernel Version <BKV>: K.M.m.c
#       K: Kernel Version
#       M: Kernel Major Revision
#       m: Kernel Minor Revision
#       c: Kernel Corrections -- I haven't seen this in testing thus far
# NOTE: this is not the whole story, but Good Enough(TM) for this
# Some common components:
#       P: Patch Number
#       E: Asynchronous Erratum
#       e: Corrections for Erratum
# el5:   <BKV>-P.<flavour> 
# el6/7: <BKV>-P.E.e.<flavour>.<arch>
# fc24:  <BKV>-P.<flavour>.<arch>
# Ubuntu: https://wiki.ubuntu.com/Kernel/FAQ#Kernel.2FFAQ.2FGeneralVersionMeaning.What_does_a_specific_Ubuntu_kernel_version_number_mean.3F
# <BKV>-<ABI number>.<upload number>-<flavour>

unset SYS_VERSION_FILE
#-- This needs to be improved
# on el6/el7 this is a symlink to /etc/redhat-release
# on fc24 this is a symlink to /etc/fedora-release
[ -f /etc/system-release ] && SYS_VERSION_FILE='/etc/system-release'
# on fc24 this is a symlink to /etc/fedora-release
[ -f /etc/redhat-release ] && SYS_VERSION_FILE='/etc/redhat-release'
# [ -f /etc/centos-release ] && SYS_VERSION_FILE='/etc/centos-release'
[ -f /etc/fedora-release ] && SYS_VERSION_FILE='/etc/fedora-release'
# [ -f /etc/debian_version ] && SYS_VERSION_FILE='/etc/debian_version'
# [ -f /etc/gentoo-release ] && SYS_VERSION_FILE='/etc/gentoo-release'
# [ -f /etc/SuSE-release ]   && SYS_VERSION_FILE='/etc/SuSE-release'
# This will exist on systems w/lsb-core packages installed and has a very specific format
# [ -f /etc/lsb-release ]    && SYS_VERSION_FILE='/etc/lsb-release' # Ubuntu/Mint

[ -n "${SYS_VERSION_FILE}" ] \
    && SYS_VERSION=$(cat "${SYS_VERSION_FILE}" | tr -d '\r\n') \
    && export SYS_VERSION

# (Static) Service Check: Is this a VM/Container? 
command -v systemctl >/dev/null 2>&1 && {
    STAT_VM_CHECK=$(systemctl is-active vmtoolsd 2>/dev/null)
}
if [ -f /var/run/vboxadd-service.sh ]; then
    STAT_VM='[V]'
elif [ -f /var/run/vmtoolsd.pid ]; then
    STAT_VM='[V]'
elif [ "${STAT_VM_CHECK}" = 'active' ]; then
    STAT_VM='[V]'
elif [ "${container}" = 'docker' ]; then
    STAT_VM='[C]'
elif [ -f '/.dockerenv' ]; then
    STAT_VM='[C]'
elif [ "${UNAMEO}" = 'Msys' ]; then
    STAT_VM='[M]'
elif [ "${UNAMEO}" = 'Cygwin' ]; then
    STAT_VM='[Y]'
elif [ "${UNAMES}" = 'Interix' ]; then
    STAT_VM='[W]'
else
    STAT_VM='---'
fi
export STAT_VM

[ -r "${SHELLD}/location/${HOSTNAME}" ]    && . "${SHELLD}/location/${HOSTNAME}"

#----------------------------------------------------------------------
#-- Set up editor & pager variables
#----------------------------------------------------------------------
if command -v nvim >/dev/null 2>&1 ; then
    EDITOR='nvim'
    VISUAL='nvim'
    alias vi='nvim'
elif command -v vim >/dev/null 2>&1 ; then
    EDITOR='vim'
    VISUAL='vim'
    alias vi='vim'
elif command -v vi >/dev/null 2>&1 ; then
    EDITOR='vi'
    VISUAL='vi'
fi

command -v sublime_text >/dev/null 2>&1 && {
    VISUAL='sublime_text'
    EDITOR='sublime_text -w '
    alias st='sublime_text'
}

EDITOR_VERSION=$(${EDITOR} --version 2>/dev/null | head -1)

export EDITOR VISUAL EDITOR_VERSION

if command -v less >/dev/null 2>&1 ; then
    export PAGER='less -FIMRSw -z-2'
    export LESS='-FIMRSw -z-2'
elif command -v more >/dev/null 2>&1 ; then
    export PAGER="more -s"
fi

#----------------------------------------------------------------------
#-- What command handles priviledge elavation
#----------------------------------------------------------------------
if [ -z "${CDC_JOINED_DOMAIN}" ]; then
    export PROG_BECOME=sudo
else
    export PROG_BECOME=dzdo
fi

#----------------------------------------------------------------------
#-- (Static) Service Check: Are we connected remotely?
#----------------------------------------------------------------------
if [ -n "${SSH_CLIENT}" ]; then
    STAT_SSH='[R]'
elif [ -n "${SSH_CONNECTION}" ]; then
    STAT_SSH='[R]'
elif [ -n "${SSH_TTY}" ]; then
    STAT_SSH='[R]'
else
    STAT_SSH='---'
fi
export STAT_SSH

#----------------------------------------------------------------------
#-- vte.sh workaround for Tilix (and other VTE-based terminals)
#--     see: https://gnunn1.github.io/tilix-web/manual/vteconfig/
#----------------------------------------------------------------------
if [ "${TILIX_ID}" ] || [ "${VTE_VERSION}" ]; then
    if [ -r "/etc/profile.d/vte.sh" ]; then
        . "/etc/profile.d/vte.sh"
    elif [ -r "/etc/profile.d/vte-2.91.sh" ]; then
        . "/etc/profile.d/vte-2.91.sh"
    fi
fi

#===============================================================================
#----------------------------------------------------------------------
export ISSET_SHELLINIT=1
#----------------------------------------------------------------------
#===============================================================================
